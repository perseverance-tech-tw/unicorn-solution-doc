"use strict";(globalThis.webpackChunkunicorn_solution=globalThis.webpackChunkunicorn_solution||[]).push([[515],{1998:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"prologue/contribution-guide","title":"Contribution Guide","description":"How to Contribute","source":"@site/docs/prologue/contribution-guide.md","sourceDirName":"prologue","slug":"/prologue/contribution-guide","permalink":"/unicorn-solution-doc/docs/prologue/contribution-guide","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Definition","permalink":"/unicorn-solution-doc/docs/prologue/definition"},"next":{"title":"User Guide","permalink":"/unicorn-solution-doc/docs/category/user-guide"}}');var t=o(4848),i=o(8453);const s={sidebar_position:2},l="Contribution Guide",a={},c=[{value:"How to Contribute",id:"how-to-contribute",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Contribution Workflow",id:"contribution-workflow",level:2},{value:"How to Report Bugs",id:"how-to-report-bugs",level:2},{value:"Example Bug Report",id:"example-bug-report",level:3},{value:"Pull Requests",id:"pull-requests",level:2},{value:"Steps for Contributing",id:"steps-for-contributing",level:3},{value:"PR Guidelines",id:"pr-guidelines",level:2}];function d(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"contribution-guide",children:"Contribution Guide"})}),"\n",(0,t.jsx)(n.h2,{id:"how-to-contribute",children:"How to Contribute"}),"\n",(0,t.jsxs)(n.p,{children:["These instructions serve as a guide for contributing to the ",(0,t.jsx)(n.strong,{children:"unicorn-solution"})," repository from your personal GitHub account. The process includes forking the repository, modifying code locally, and submitting a pull request (PR) to merge your changes. Keep in mind that specific steps may vary slightly depending on ",(0,t.jsx)(n.strong,{children:"unicorn-solution"})," requirements and guidelines."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Understand the Project"}),(0,t.jsx)(n.br,{}),"\n","Before contributing, review the project\u2019s purpose, goals, and structure. Read the ",(0,t.jsx)(n.code,{children:"README.md"}),", browse the documentation, and scan the codebase to understand how things work."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fork the Repository"}),(0,t.jsx)(n.br,{}),"\n","Sign in to GitHub, navigate to the ",(0,t.jsx)(n.strong,{children:"unicorn-solution"})," repository, and click ",(0,t.jsx)(n.strong,{children:"Fork"})," (top right). This creates a copy under your account so you can make changes without affecting the original project."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Clone Your Fork"}),(0,t.jsx)(n.br,{}),"\n","Clone your fork to your local machine (replace ",(0,t.jsx)(n.code,{children:"<your-username>"})," with your GitHub username):","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/<your-username>/unicorn-solution.git\ncd unicorn-solution\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Set Up Your Development Environment"}),"\nFollow the setup instructions in the repository\u2019s README.md (install dependencies, configure environment variables, run the app/tests). If the project uses linters/formatters or pre-commit hooks, make sure they\u2019re installed and enabled."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pick an Issue or Feature"}),"\nBrowse the issue tracker or roadmap for items to work on. Look for labels like good first issue or help wanted for beginner-friendly tasks. If you have a new idea, open an issue first to discuss it."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Create a Branch"}),"\nCreate a new, descriptive branch for your work:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git checkout -b feat/short-feature-name\n# or\ngit checkout -b fix/short-bug-description\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Make Your Changes"}),"\nImplement the fix/feature or improve documentation. Keep changes focused and incremental. If applicable, add or update tests and docs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Push Changes to Your Fork"}),"\nCommit with clear messages and push your branch:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'git add .\ngit commit -m "feat: concise description of the change"\ngit push origin feat/short-feature-name\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Open a Pull Request"}),"\nGo to your fork on GitHub and click New pull request. Compare your branch against the original repository\u2019s default branch, describe your changes, link related issues, and submit the PR for review."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"contribution-workflow",children:"Contribution Workflow"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Select a Contribution"})," : Choose something aligned with the project goals\u2014bug fix, new feature, documentation improvement, or tooling enhancement."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fork the Repository"})," : Work from your fork to avoid impacting the original codebase."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Create a Branch"})," : Use a descriptive name that reflects the nature of your contribution."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Make Changes"})," : Implement the solution while following coding standards and project conventions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Commit Changes"})," : Use clear, descriptive commit messages\u2014each commit should represent a logical, reviewable change."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Push Changes"})," : Push your branch to your fork so maintainers can review your work."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Submit a Pull Request (PR)"})," : Provide context, rationale, and any screenshots/logs. Link issues (e.g., Closes #123)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Review Process"})," : Maintainers will review your PR, ask questions, or request updates. Be constructive and responsive."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Address Feedback"})," : Make requested changes, update tests/docs as needed, and push new commits to your PR branch."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Merge PR"})," : After approvals and passing checks, a maintainer will merge your PR. Congratulations\u2014your contribution is part of unicorn-solution!"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"how-to-report-bugs",children:"How to Report Bugs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure that the bug hasn't already been reported by searching through open and closed issues."}),"\n",(0,t.jsx)(n.li,{children:"Describe the issue in as much detail as possible, including steps to reproduce, expected behavior, and actual behavior."}),"\n",(0,t.jsx)(n.li,{children:"Provide the environment information such as operating system, version, libraries, and any other relevant details."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-bug-report",children:"Example Bug Report"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markdown",children:"**Bug Description**\n[Explain the bug]\n\n**Steps to Reproduce**\n1. Step 1\n2. Step 2\n3. Step 3\n\n**Expected Behavior**\n[Describe what should happen]\n\n**Actual Behavior**\n[Describe what happens instead]\n\n**Environment**\n- OS: [e.g. Ubuntu 20.04]\n- Python Version: [e.g. 3.8.10]\n- Dependencies: [list major dependencies]\n\n**Additional Information**\n[Include anything else you think might help]\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"pull-requests",children:"Pull Requests"}),"\n",(0,t.jsx)(n.p,{children:"We love receiving pull requests! Here's a quick guide to submitting one."}),"\n",(0,t.jsx)(n.h3,{id:"steps-for-contributing",children:"Steps for Contributing"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:'Fork the repository: Click on the "Fork" button at the top of this page to create a copy of the repository.'}),"\n",(0,t.jsx)(n.li,{children:"Clone the forked repository: Clone the repository to your local machine to work on it."}),"\n",(0,t.jsx)(n.li,{children:"Create a new branch: Make sure you create a new branch for your changes."}),"\n",(0,t.jsx)(n.li,{children:"Make your changes: Implement your fix or feature."}),"\n",(0,t.jsx)(n.li,{children:"Commit your changes: Add a clear and concise commit message."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markdown",children:'git add .\ngit commit -m "Add feature: [feature name]"\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"6",children:["\n",(0,t.jsx)(n.li,{children:"Push your changes."}),"\n",(0,t.jsx)(n.li,{children:"Submit a pull request: Go to the repository and click on the \u201cNew Pull Request\u201d button."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"pr-guidelines",children:"PR Guidelines"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Provide a clear explanation of what your PR does."}),"\n",(0,t.jsx)(n.li,{children:"Adhere to the project's code style and conventions."}),"\n",(0,t.jsx)(n.li,{children:"Make sure that your changes don't break the code and pass any relevant tests."}),"\n",(0,t.jsx)(n.li,{children:"If you're adding new functionality, consider writing tests to cover your changes."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"Copyright @ Perseverance Technology. 2025"})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>l});var r=o(6540);const t={},i=r.createContext(t);function s(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);